import fetch from "../services/tmdb.service.js"; 

export async function getTrendingMovie(req, res) {
  try {
    const response = await fetch("https://imdb236.p.rapidapi.com/imdb/india/top-rated-indian-movies");
    
    // Instead of calling response.text(), we check the response.ok property.
    if (!response.ok) {
      console.error("RapidAPI error response:", response);
      return res.status(response.status).json({ success: false, error: "Failed to fetch data" });
    }

    const data = await response.json();
    
    if (!data || !Array.isArray(data.results) || data.results.length === 0) {
      return res.status(404).json({ success: false, message: "No trending movies found" });
    }

    // Randomly select a featured movie
    const randomMovie = data.results[Math.floor(Math.random() * data.results.length)];

    // Build a list of movies from data.d if it exists
    const list = Array.isArray(data.d)
      ? data.d.map((item) => ({
          name: item.l,
          poster: item.i && item.i.imageUrl ? item.i.imageUrl : "No poster available",
        }))
      : [];

    return res.json({ success: true, content: randomMovie, movies: list });
  } catch (error) {
    console.error("Error fetching trending movies:", error.message);
    return res.status(500).json({ success: false, message: "Internal Server Error" });
  }
}

export async function getMovieDetails(req, res) { 
  const { id } = req.params; 
  try {
    const response = await fetch(`https://imdb236.p.rapidapi.com/imdb/${id}`);

    if (!response.ok) {
      return res.status(response.status).json({ error: "Failed to fetch data" });
    }

    const data = await response.json();
    const description = data.description || "Description not found";

    return res.json({ description });
  } catch (error) {
    return res.status(500).json({ error: "Internal server error", details: error.message });
  }
}













export async function getMoviesByCategory(req, res) {
  const { genres } = req.params;
  try {
    const response = await fetch(`https://imdb236.p.rapidapi.com/imdb/${genres}`);

    if (!response.ok) {
      return res.status(response.status).json({ error: "Failed to fetch data" });
    }
    const data = await response.json();
    const movieGenres = data.genres || ["Genres not found"];
    return res.json({ genres: movieGenres });
  } catch (error) {
    return res.status(500).json({ error: "Internal server error", details: error.message });
  }
}

// export async function getSimilarMovies(req, res) {
// 	const { id } = req.params;
// 	try {
// 		const data = await fetch(`https://movies-tv-shows-database.p.rapidapi.com/?${id}/&page=1`);

// 		res.status(200).json({ success: true, similar: data.results });
// 	} catch (error) {
// 		res.status(500).json({ success: false, message: "Internal Server Error" });
// 	}
// }

//https://similar-movies.p.rapidapi.com/similar?${id}

//tt23849204


// images:
// const url = 'https://imdb-com.p.rapidapi.com/title/get-images?tconst=tt0120338';
// const options = {
// 	method: 'GET',
// 	headers: {
// 		'x-rapidapi-key': '5edd79421cmsh88f0dfbede735dfp1a11a1jsnffbf791c9a3f',
// 		'x-rapidapi-host': 'imdb-com.p.rapidapi.com'
// 	}
// };

// try {
// 	const response = await fetch(url, options);
// 	const result = await response.text();
// 	console.log(result);
// } catch (error) {
// 	console.error(error);
// }

//image
//https://imdb232.p.rapidapi.com/api/actors/get-images?nm=nm0366389&limit=25